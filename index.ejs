<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>

<body>
    <h3 class="text-center">Log Monitor</h3>
    <div class="row">
        <div class="col-lg-12">
         

            <p class="text-center">Type in the name of the file , you want to monitor</p>
        </div>
        
    </div>
    <div class="row">
        <div class="col-lg-4 col-lg-offset-4">
            <div class="input-group">
                <input type="text" id="filename" class="form-control" placeholder="Enter File Name">
                <span class="input-group-addon" onclick="showLogs()" style="cursor:pointer">
                    Show logs
                </span>
            </div>
        </div>
    </div>
    <br>
    <pre id="logs"></pre>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();
        var pre = document.getElementById('logs');
        var input = document.getElementById('filename');
        var currentState = [];
        var oldFileName = '';
        function showLogs() {
            var filename = input.value;
            if(oldFileName){
                removeListeners(socket, oldFileName);
            }
            oldFileName = filename;
            currentState = [];
            socket.emit('filename', filename);
            attachNewListeners(socket, filename);
        }


       function newData(data) {
            currentState = data.logs;
            pre.innerHTML = data.logs.join('\n');
        }

        function newLines(lines){
            currentState = currentState.concat(lines);
            while (currentState.length > 10) {
                currentState.shift();
            }
            pre.innerHTML = currentState.join('\n');
        }

        function attachNewListeners(socket, filename){
            socket.on(filename+'log', newData);
            socket.on(filename+'loglines', newLines);
        }

        function removeListeners(socket, filename){
            socket.removeEventListener(filename+'log', newData);
            socket.removeEventListener(filename+'loglines', newLines);
        }

        socket.on('fileerror', function (error) {
            pre.innerHTML = error;
        });

       
    </script>
</body>

</html>